@function oFtIconsGetSelectors($icon) {
	$aggregated-selector: ();
	$aggregated-selector: append($aggregated-selector, #{'%o-ft-icons-#{$icon}'}, comma);
	@if (not $o-ft-icons-is-silent) {
		$aggregated-selector: append($aggregated-selector, #{'.o-ft-icons-#{$icon}'}, comma);
	}
	@return $aggregated-selector;
}

@mixin oFtIconsFontFace() {
	@if (not $_o-ft-icons-font-face-already-output) {
		$_o-ft-icons-font-face-already-output: true;
		@font-face {
			font-family: $_o-ft-icons-font-name;
			src: url(oAssetsResolve($_o-ft-icons-font-file-name + ".eot", o-ft-icons));
			src: url(oAssetsResolve($_o-ft-icons-font-file-name + ".eot?#iefix", o-ft-icons)) format("embedded-opentype"),
				 url(oAssetsResolve($_o-ft-icons-font-file-name + ".woff", o-ft-icons)) format("woff"),
				 url(oAssetsResolve($_o-ft-icons-font-file-name + ".ttf", o-ft-icons)) format("truetype");
			font-weight:normal;
			font-style:normal;
		}
	}
}

// Base styles for all icons
@mixin oFtIconsBaseIconStyles() {
	font-family: $_o-ft-icons-font-name;
	display: inline-block;
	vertical-align: middle;
	// These are marked as !important as the icon font is not designed to be used with faux bold or faux italic styles
	// If bolder versions of an icon are required a new SVG should be designed and added to the icon font
	font-weight: normal !important; 
	font-style: normal !important;
	speak: none;
	text-decoration: inherit;
	text-transform: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

// Placeholder (and optionally concrete class) for individual icon (modern browsers)
@mixin _oFtIconsStandardsIcon($icon-class, $character-code, $placement: 'before') {
	$icon-selectors: oFtIconsGetSelectors("#{$icon-class}:#{$placement}");
	#{$icon-selectors} {
		// a hack to enable outputting of a single backslash; escaping in sass is a bit of a mess!
		content: str-slice("\x",1,1) + $character-code;
	}
}

// Placeholder (and optionally concrete class) for individual icon (IE7 hack)
@mixin _oFtIconsIe7Icon($icon-class, $character-code) {

	$icon-selectors: oFtIconsGetSelectors($icon-class);
 	@include oUseragentTarget(ie7) {
		#{$icon-selectors} {
			*zoom: expression(this.runtimeStyle['zoom'] = '1', this.innerHTML = '#{"&#x#{$character-code};&nbsp;"}');
		}
 	}
}

@mixin oFtIconsIcon ($icon-name, $character-code) {
	@include _oFtIconsIe7Icon(icon--#{$icon-name}, $character-code);
	@include _oFtIconsStandardsIcon(icon--#{$icon-name}, $character-code);
	@include _oFtIconsStandardsIcon(icon--#{$icon-name}--after, $character-code, after);
}