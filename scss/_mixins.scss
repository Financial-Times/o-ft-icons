/// Generate base icon class
///
/// @private
@mixin _oFtIconsStyles() {
	.o-ft-icon {
		@include oFtIconsIconStyles();
	}
}

/// Generate icon size variation classes
///
/// @private
@mixin _oFtIconsSizes() {
	@each $key, $value in $o-ft-icons-icon-sizes {
		.o-ft-icon--#{$key} {
			@include oFtIconsIconSize($value);
		}
	}
}

/// Generate icon color variation classes
///
/// @private
@mixin _oFtIconsColors() {
	@each $color-name, $color-code in $o-ft-icons-icon-colors {
		.o-ft-icon--#{$color-name} {
			@include oFtIconsIconColor($color-name);
		}
	}
}

/// Generate icon name variation classes
///
/// @private
@mixin _oFtIconsNames() {
	@each $icon-name in $o-ft-icons-icon-names {
		.o-ft-icon--#{$icon-name} {
			@include oFtIconsIconName($icon-name);
		}
	}
}

/// Base icon styles
///
/// @example scss
///  @include oFtIconsIconStyles();
@mixin oFtIconsIconStyles() {
	position: relative;
	display: inline-block;
	overflow: hidden;
	background-image: #{url('#{_oFtIconsImageUrl()}.png')}\9;

	// Create a canvas for the background because background-position X/Y
	// cannot be manipulated individually but position top/left can.
	// Double colon syntax is ignored by old IE.
	&::after {
		content: '';
		position: absolute;
		width: percentage(length($o-ft-icons-icon-colors));
		height: percentage(length($o-ft-icons-icon-names));
		// Android 2.x doesn't support SVG but does support background-size...
		background-image: url('#{_oFtIconsImageUrl()}.png');
		// However, it will try to download the SVG so multibackgrounds FTW.
		background-image: linear-gradient(transparent, transparent), url('#{_oFtIconsImageUrl()}.svg');
		background-repeat: no-repeat;
		background-size: 100%;
	}
}

/// Specify icon size
///
/// @example scss
///  @include oFtIconsIconSize(32);
///
/// @param {Number|String} $icon-size - Icon size in px or keyword
@mixin oFtIconsIconSize($icon-size) {
	@if (type-of($icon-size) == 'string') {
		$icon-size: map-get($o-ft-icons-icon-sizes, $icon-size);
	}
	@if ($icon-size == null) {
		@error "Size is not configured.";
	}

	width: $icon-size + 0px;
	height: $icon-size + 0px;

	// Old IE fallback uses zoom to scale icon size
	width: #{$o-ft-icons-icon-base-size + 0px}\9;
	height: #{$o-ft-icons-icon-base-size + 0px}\9;
	// Some browsers other than IE did actually implement zoom!
	zoom: #{_oFtIconsIeZoomLevel($icon-size)}\9;
}

/// Specify icon colour
///
/// @example scss
///  @include oFtIconsIconColor('blue');
///
/// @param {String} $color-name - Name of colour in palette
@mixin oFtIconsIconColor($color-name) {
	// For old IE
	background-position-x: #{_oFtIconsImagePositionX($color-name)}\9;

	&::after {
		left: _oFtIconsImagePositionX($color-name);
	}
}

/// Specify icon name
///
/// @example scss
///  @include oFtIconsIconName('hamburger');
///
/// @param {String} $icon-name - Name of icon
@mixin oFtIconsIconName($icon-name) {
	// For old IE
	background-position-y: #{_oFtIconsImagePositionY($icon-name)}\9;

	&::after {
		top: _oFtIconsImagePositionY($icon-name);
	}
}

/// Add an icon specifying size, colour and name.
///
/// @example scss
///  @include oFtIconsIcon(32, 'blue', 'hamburger');
///  @include oFtIconsIcon('s', 'blue', 'hamburger');
///
/// @param {Number|String} $icon-size - Icon size in px or keyword
/// @param {String} $color-name - Name of colour in palette
/// @param {String} $icon-name - Name of icon
@mixin oFtIconsIcon($icon-size, $color-name, $icon-name) {
	@include oFtIconsIconStyles();
	@include oFtIconsIconSize($icon-size);
	@include oFtIconsIconColor($color-name);
	@include oFtIconsIconName($icon-name);
}
