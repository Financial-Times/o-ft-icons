/// Generate base icon class
///
/// @private
@mixin _oFtIconsStyles() {
	.o-ft-icon {
		@include oFtIconsIconStyles();
	}
}

/// Generate icon size variation classes
///
/// @private
@mixin _oFtIconsSizes() {
	@each $key, $value in $o-ft-icons-icon-sizes {
		.o-ft-icon--#{$key} {
			@include oFtIconsIconSize($value);
		}
	}
}

/// Generate icon color variation classes
///
/// @private
@mixin _oFtIconsColors() {
	@each $color-name, $color-code in $o-ft-icons-icon-colors {
		.o-ft-icon--#{$color-name} {
			@include oFtIconsIconColor($color-name);
		}
	}
}

/// Generate icon symbol variation classes
///
/// @private
@mixin _oFtIconsSymbols() {
	@each $symbol-name in $o-ft-icons-icon-symbols {
		.o-ft-icon--#{$symbol-name} {
			@include oFtIconsIconSymbol($symbol-name);
		}
	}
}

/// Base icon styles
///
/// @example scss
///  @include oFtIconsIconStyles();
@mixin oFtIconsIconStyles() {
	/* autoprefixer: off */
	position: relative;
	display: inline-block;
	overflow: hidden;

	// Create a canvas for the background because background-position X/Y
	// cannot be manipulated individually in all browsers but absolute positioning
	// has been supported forever.
	&:after {
		content: '';
		position: absolute;
		// Scale the canvas to the size of the background image to avoid clipping.
		width: percentage(length($o-ft-icons-icon-colors));
		height: percentage(length($o-ft-icons-icon-symbols));
		// Android 2.x doesn't support SVG but does support background-size...
		background-image: url('#{_oFtIconsImageUrl()}.png');
		// ... however, it will download the SVG but multi-backgrounds stops it.
		// ... however, although multi-bgs are supported by IE9, gradients aren't.
		// <http://pauginer.com/post/36614680636/invisible-gradient-technique>
		// scss-lint:disable NameFormat
		background-image: -webkit-linear-gradient(transparent, transparent), url('#{_oFtIconsImageUrl()}.svg');
		background-image: linear-gradient(transparent, transparent), url('#{_oFtIconsImageUrl()}.svg');
		-webkit-background-size: 100%;
		background-size: 100%;
	}
}

/// Specify icon size
///
/// @example scss
///  @include oFtIconsIconSize(32);
///
/// @param {Number|String} $icon-size - Icon size in px or keyword
@mixin oFtIconsIconSize($icon-size) {
	@if (type-of($icon-size) == 'string') {
		$icon-size: map-get($o-ft-icons-icon-sizes, $icon-size);
	}

	@if (type-of($icon-size) != 'number') {
		@error 'Given size keyword is not configured.';
	}

	/* autoprefixer: off */
	width: $icon-size + px;
	height: $icon-size + px;

	&:after {
		// Old IE fallback uses zoom to scale icon size.
		// Other browsers have implemented zoom so it needs scoping to IE only.
		zoom: _oFtIconsIeZoomLevel($icon-size);

		@media all and (min-width: 0) {
			// IE9 doesn't support keyword values ಠ_ಠ
			zoom: 1;
		}
	}
}

/// Specify icon color
///
/// @example scss
///  @include oFtIconsIconColor('blue');
///
/// @param {String} $color-name - Name of color from palette
@mixin oFtIconsIconColor($color-name) {
	&:after {
		left: _oFtIconsImagePositionX($color-name, $fallback: true);

		@media all and (min-width: 0) {
			left: _oFtIconsImagePositionX($color-name);
		}
	}
}

/// Specify icon symbol
///
/// @example scss
///  @include oFtIconsIconName('hamburger');
///
/// @param {String} $symbol-name - Name of symbol from symbols list
@mixin oFtIconsIconSymbol($symbol-name) {
	&:after {
		top: _oFtIconsImagePositionY($symbol-name, $fallback: true);

		@media all and (min-width: 0) {
			top: _oFtIconsImagePositionY($symbol-name);
		}
	}
}

/// Add an icon specifying size, color and name.
///
/// @example scss
///  @include oFtIconsIcon(32, 'blue', 'hamburger');
///  @include oFtIconsIcon('s', 'blue', 'hamburger');
///
/// @param {Number|String} $icon-size - Icon size in px or keyword
/// @param {String} $color-name - Name of color from palette
/// @param {String} $symbol-name - Name of symbol from symbols list
@mixin oFtIconsIcon($icon-size, $color-name, $symbol-name) {
	@include oFtIconsIconStyles();
	@include oFtIconsIconSize($icon-size);
	@include oFtIconsIconColor($color-name);
	@include oFtIconsIconSymbol($symbol-name);
}
