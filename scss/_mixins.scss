@mixin _oFtIconsStyles() {
	.o-ft-icon {
		@include oFtIconsIconStyles();
	}
}

@mixin _oFtIconsSizes() {
	@each $key, $value in $o-ft-icons-icon-sizes {
		.o-ft-icon--#{$key} {
			@include oFtIconsIconSize($value);
		}
	}
}

@mixin _oFtIconsColors() {
	@each $color-name, $color-code in $o-ft-icons-icon-colors {
		.o-ft-icon--#{$color-name} {
			@include oFtIconsIconColor($color-name);
		}
	}
}

@mixin _oFtIconsNames() {
	@each $icon-name in $o-ft-icons-icon-names {
		.o-ft-icon--#{$icon-name} {
			@include oFtIconsIconName($icon-name);
		}
	}
}

@mixin oFtIconsIconStyles() {
	position: relative;
	display: inline-block;
	overflow: hidden;

	// Create a canvas for the background because background-position X/Y
	// cannot be manipulated individually but position top/left can.
	&:after {
		content: '';
		position: absolute;
		width: percentage(length($o-ft-icons-icon-colors));
		height: percentage(length($o-ft-icons-icon-names));
		// Android 2.x doesn't support SVG but does support background-size...
		background-image: url('#{_oFtIconsImageUrl()}.png');
		// However, it will try to download the SVG so multibackgrounds FTW.
		background-image: linear-gradient(transparent, transparent), url('#{_oFtIconsImageUrl()}.svg');
		background-repeat: no-repeat;
		background-size: 100%;
	}
}

@mixin oFtIconsIconSize($icon-size) {
	width: $icon-size + 0px;
	height: $icon-size + 0px;

	&:after {
		background-image: url('#{_oFtIconsImageUrl()}-#{$icon-size}.png')\9;
	}
}

@mixin oFtIconsIconColor($color-name) {
	&:after {
		left: _oFtIconsImagePositionX($color-name);
	}
}

@mixin oFtIconsIconName($icon-name) {
	&:after {
		top: _oFtIconsImagePositionY($icon-name);
	}
}
