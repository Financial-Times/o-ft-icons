@mixin oFtIconsFontFace() {
	@if (not $_o-ft-icons-font-face-already-output) {
		$_o-ft-icons-font-face-already-output: true;
		@font-face {
			font-family: $_o-ft-icons-font-name;
			src: url(oAssetsResolve($_o-ft-icons-font-file-name + ".eot", o-ft-icons));
			src: url(oAssetsResolve($_o-ft-icons-font-file-name + ".eot?#iefix", o-ft-icons)) format("embedded-opentype"),
				 url(oAssetsResolve($_o-ft-icons-font-file-name + ".woff", o-ft-icons)) format("woff"),
				 url(oAssetsResolve($_o-ft-icons-font-file-name + ".ttf", o-ft-icons)) format("truetype");
			font-weight:normal;
			font-style:normal;
		}
	}
}

// Base styles for all icons
@mixin oFtIconsBaseIconStyles() {
	font-family: $_o-ft-icons-font-name;
	display: inline-block;
	vertical-align: middle;
	font-weight: normal;
	font-style: normal;
	speak: none;
	text-decoration: inherit;
	text-transform: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

// Placeholder (and optionally concrete class) for individual icon (modern browsers)
@mixin oFtIconsIcon($icon, $content, $placement: 'before') {
	$icon-selectors: oFtIconsGetSelectors("#{$icon}:#{$placement}");
	#{$icon-selectors} {
		content: $content;
	}
}

// Placeholder (and optionally concrete class) for individual icon (IE7 hack)
@mixin oFtIconsIconIe7($icon, $content) {
	$icon-selectors: oFtIconsGetSelectors($icon);
	@include oUseragentTarget(ie7) {
		#{$icon-selectors} {
			*zoom: expression(this.runtimeStyle['zoom'] = '1', this.innerHTML = '#{$content}');
		}
	}
}